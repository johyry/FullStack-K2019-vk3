{"version":3,"sources":["services/persons.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","id","delete","Filter","props","react_default","a","createElement","value","onChange","PersonForm","onSubmit","valueName","onNameChange","valueNumber","onNumberChange","type","Numerot","_ref2","numbers","filter","handleClick","number","name","toUpperCase","includes","map","key","onClick","Notification","_ref3","message","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","personService","initialPersons","personsContains","i","length","SetNotification","text","setTimeout","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","personObject","onko","returnedPerson","catch","error","p","window","confirm","returnedObject","App_Numerot","_ref","r","deleteNumber","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9c5dd27.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    \n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  };\n  \n  const update = (newObject) => {\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const Delete = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n   \n    return request.then(response => response.data)\n  }\n  \n  export default { getAll, create, update, Delete }","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport './index.css'\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService.getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addNumber = event => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    const onko = personsContains(newName)\n    \n\n    if (onko === -1) {\n      personService.create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        SetNotification(`Henkilö ${personObject.name} lisätty palvelimelle`)\n      })\n      .catch(error => {\n        SetNotification(`Henkilö ${personObject.name} on jo poistettu palvelimelta`)\n        setPersons(persons.filter(p => p.id !== onko.id))\n      })\n      \n      } else {\n      \n      if (window.confirm(`${onko.name} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        onko.number = newNumber\n        personService\n          .update(onko)\n          .then(returnedObject => {\n            setPersons(persons.map(p => p.id !== returnedObject.id ? p : returnedObject))\n            SetNotification(`Henkilön ${onko.name} numero muutettu palvelimella`)\n          })\n          .catch(error => {\n            SetNotification(`Henkilö ${personObject.name} on jo poistettu palvelimelta`)\n            setPersons(persons.filter(p => p.id !== onko.id))\n          })\n      }\n      \n\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deleteNumber = ({ number }) => {\n\n    if (window.confirm(`Poistetaanko ${number.name}`)) {\n      personService\n      .Delete(number.id)\n      .then(r => {\n        setPersons(persons.filter(p => p.id !== number.id))\n        SetNotification(`Henkilön ${number.name} poistettu palvelimelta`)\n      })\n      .catch(error => {\n        SetNotification(`Henkilö ${number.name} on jo poistettu palvelimelta`)\n        setPersons(persons.filter(p => p.id !== number.id))\n      })\n    \n      \n    }\n    \n  }\n\n  const personsContains = name => {\n    for (var i = 0; i < persons.length; i++) {\n      if (persons[i].name === name) {\n        return persons[i]\n      }\n    }\n    return -1;\n  };\n\n  const handleNameChange = event => {\n    //console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    //console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    //console.log(event.target.value);\n    setNewFilter(event.target.value);\n  };\n\n  const SetNotification = (text) => {\n    setErrorMessage(text)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      <Notification message={errorMessage} />\n\n      <Filter value={newFilter} onChange={handleFilterChange} />\n\n      <h2>Lisää uusi</h2>\n\n      <PersonForm\n        onSubmit={addNumber}\n        valueName={newName}\n        onNameChange={handleNameChange}\n        valueNumber={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h2>Numerot</h2>\n\n      <Numerot \n        numbers={persons} \n        filter={newFilter}\n        handleClick={(number) => deleteNumber(number)}\n      />\n    </div>\n  );\n};\n\n\n\nconst Filter = props => (\n  <form>\n    <div>\n      Rajaa näytettäviä: <input value={props.value} onChange={props.onChange} />\n    </div>\n  </form>\n);\n\nconst PersonForm = props => (\n  <form onSubmit={props.onSubmit}>\n    <div>\n      nimi: <input value={props.valueName} onChange={props.onNameChange} />\n    </div>\n    <div>\n      numero:{\" \"}\n      <input value={props.valueNumber} onChange={props.onNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n);\n\nconst Numerot = ({ numbers, filter, handleClick }) => {\n  const filtered = numbers.filter(number =>\n    number.name.toUpperCase().includes(filter.toUpperCase())\n  );\n\n  return filtered.map(number => (\n    <div key={number.id}>\n      {number.name} {number.number}\n      <button onClick={() => handleClick({number})}>delete</button>\n    </div>\n  ));\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}